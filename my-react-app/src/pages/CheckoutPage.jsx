import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import emailjs from 'emailjs-com';

function CheckoutPage({ cartItems = [], clearCart }) {
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    city: '',
    district: '',
    address: '',
    note: '',
  });

  const [shippingMethod, setShippingMethod] = useState('fast');
  const shippingFee = shippingMethod === 'express' ? 35000 : 30000;
  const [paymentMethod, setPaymentMethod] = useState('cod');

  const productTotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const vatFee = productTotal * 0.1;
  const total = productTotal + vatFee + shippingFee;

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };
  const formatCartItems = () => {
    return cartItems
      .map((item) => `${item.name} x${item.quantity} - ${item.price.toLocaleString()}‚Ç´`)
      .join('\n');
  };
  const handleCheckout = () => {
    const templateParams = {
      ...formData,
      total: `${total.toLocaleString()}‚Ç´`,
      items: formatCartItems(),
      vatFee: vatFee,
      productTotal: productTotal,
      shippingFee: shippingFee,
    };
  // ‚úÖ G·ª≠i cho admin
    emailjs.send(
      'service_0537mic',     // üîÅ Thay b·∫±ng ID th·ª±c t·∫ø
      'template_admin',      // üîÅ Template admin
      templateParams,
      'wduUp5Bce99TZguMa'         // üîÅ Public Key t·ª´ EmailJS dashboard
    );

    // ‚úÖ G·ª≠i cho kh√°ch h√†ng
    emailjs.send(
      'service_0537mic',
      'template_customer',
      templateParams,
      'wduUp5Bce99TZguMa'
    );

    alert(`ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t th√†nh c√¥ng!\nCh√∫ng t√¥i ƒë√£ g·ª≠i email x√°c nh·∫≠n t·ªõi ${formData.email}`);
    clearCart();
    navigate('/ordersuccess');
  };
  return (
    <div className="p-6 grid grid-cols-1 md:grid-cols-10 gap-6">
      {/* B√™n tr√°i: Form nh·∫≠p li·ªáu 7 ph·∫ßn */}
      <div className="md:col-span-7 bg-white p-6 rounded-xl shadow-md">
        <h2 className="text-xl font-bold mb-4">Th√¥ng tin giao h√†ng</h2>

        {['name', 'phone', 'email', 'city', 'district', 'address'].map((field, i) => (
          <input
            key={i}
            type="text"
            name={field}
            placeholder={
              field === 'address'
                ? 'Nh·∫≠p ƒë·ªãa ch·ªâ, t√≤a nh√†...'
                : `Nh·∫≠p ${field === 'name' ? 'h·ªç v√† t√™n' : field}`
            }
            value={formData[field]}
            onChange={handleInputChange}
            className="w-full mb-3 px-4 py-2 border rounded"
          />
        ))}

        <h2 className="text-xl font-bold mt-6 mb-2">Ph∆∞∆°ng th·ª©c giao h√†ng</h2>
        <div className="space-y-2">
          <label className="flex justify-between border px-4 py-2 rounded cursor-pointer">
            <div>
              <input
                type="radio"
                name="shipping"
                checked={shippingMethod === 'fast'}
                onChange={() => setShippingMethod('fast')}
              />{' '}
              Giao h√†ng ti√™u chu·∫©n
            </div>
            <span>30.000‚Ç´</span>
          </label>

          <label className="flex justify-between border px-4 py-2 rounded cursor-pointer">
            <div>
              <input
                type="radio"
                name="shipping"
                checked={shippingMethod === 'express'}
                onChange={() => setShippingMethod('express')}
              />{' '}
              Giao h√†ng h·ªèa t·ªëc
            </div>
            <span>35.000‚Ç´</span>
          </label>
        </div>

        <h2 className="text-xl font-bold mt-6 mb-2">Ph∆∞∆°ng th·ª©c thanh to√°n</h2>
        <label className="flex items-center border px-4 py-2 rounded cursor-pointer">
          <input
            type="radio"
            name="payment"
            defaultChecked
            onChange={() => setPaymentMethod('cod')}
            className="mr-2"
          />
          Thanh to√°n khi giao h√†ng (COD)
        </label>

        <textarea
          name="note"
          value={formData.note}
          onChange={handleInputChange}
          className="w-full mt-4 px-4 py-2 border rounded"
          placeholder="Ghi ch√∫ ƒë∆°n h√†ng"
        />
      </div>

      {/* B√™n ph·∫£i: 3 ph·∫ßn */}
      <div className="md:col-span-3 bg-white p-6 rounded-xl shadow-md">
        <h2 className="text-lg font-semibold mb-4">T√≥m t·∫Øt ƒë∆°n h√†ng</h2>
        <ul className="space-y-4 max-h-72 overflow-y-auto pr-2">
          {cartItems.map((item) => (
            <li key={item.id} className="flex items-center gap-4">
              <img src={item.image} alt={item.name} className="w-16 h-16 rounded object-cover" />
              <div>
                <p className="font-semibold text-sm">{item.name}</p>
                <p className="text-sm text-gray-600">x{item.quantity}</p>
              </div>
            </li>
          ))}
        </ul>

        <div className="border-t mt-4 pt-4 space-y-2 text-sm">
          <div className="flex justify-between">
            <span>Ph√≠ s·∫£n ph·∫©m:</span>
            <span>{productTotal.toLocaleString()}‚Ç´</span>
          </div>
          <div className="flex justify-between">
            <span>VAT (10%):</span>
            <span>{vatFee.toLocaleString()}‚Ç´</span>
          </div>
          <div className="flex justify-between">
            <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
            <span>{shippingFee.toLocaleString()}‚Ç´</span>
          </div>
          <div className="flex justify-between font-bold border-t pt-2">
            <span>T·ªïng c·ªông:</span>
            <span>{total.toLocaleString()}‚Ç´</span>
          </div>
        </div>

        <button
          onClick={handleCheckout}
          className="bg-black text-white px-6 py-3 mt-6 w-full rounded-full border border-gray-300 hover:bg-gray-800 transition duration-300 ease-in-out shadow-md"
        >
          X√°c nh·∫≠n mua h√†ng
        </button>
      </div>
    </div>
  );
}

export default CheckoutPage;
